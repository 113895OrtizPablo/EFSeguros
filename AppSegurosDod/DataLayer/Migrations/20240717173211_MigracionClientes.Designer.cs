// <auto-generated />
using System;
using DataLayer.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DataLayer.Migrations
{
    [DbContext(typeof(ContextDb))]
    [Migration("20240717173211_MigracionClientes")]
    partial class MigracionClientes
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("DataLayer.ModelsCodeFirst.Asegurado", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("DNI")
                        .HasMaxLength(9)
                        .HasColumnType("int");

                    b.Property<string>("Estado")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("FechaNacimiento")
                        .HasMaxLength(10)
                        .HasColumnType("datetime2");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("PolizaId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PolizaId");

                    b.ToTable("Asegurados");

                    b.HasData(
                        new
                        {
                            Id = new Guid("2dba3b28-1f2f-4bdc-ab27-becd83313f53"),
                            DNI = 165528,
                            Estado = "ACTIVO",
                            FechaNacimiento = new DateTime(1964, 3, 30, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Nombre = "Jimena",
                            PolizaId = 1
                        },
                        new
                        {
                            Id = new Guid("40dddef6-8a8f-4551-839b-b7658655a70d"),
                            DNI = 39498,
                            Estado = "ACTIVO",
                            FechaNacimiento = new DateTime(2000, 7, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Nombre = "Carlos",
                            PolizaId = 1
                        },
                        new
                        {
                            Id = new Guid("32360d57-cbf0-47c8-bd0e-1726d6c505ac"),
                            DNI = 35966,
                            Estado = "INACTIVO",
                            FechaNacimiento = new DateTime(2019, 11, 9, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Nombre = "Guada",
                            PolizaId = 2
                        });
                });

            modelBuilder.Entity("DataLayer.ModelsCodeFirst.Poliza", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Estado")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("ProductoId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ProductoId");

                    b.ToTable("Polizas");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Estado = "ACTIVO",
                            ProductoId = 2
                        },
                        new
                        {
                            Id = 2,
                            Estado = "ACTIVO",
                            ProductoId = 2
                        },
                        new
                        {
                            Id = 3,
                            Estado = "INACTIVO",
                            ProductoId = 2
                        });
                });

            modelBuilder.Entity("DataLayer.ModelsCodeFirst.Producto", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("TipoId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("TipoId");

                    b.ToTable("Productos");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Producto_1",
                            TipoId = 1
                        },
                        new
                        {
                            Id = 2,
                            Name = "Producto_2",
                            TipoId = 2
                        },
                        new
                        {
                            Id = 3,
                            Name = "Prodcuto_3",
                            TipoId = 1
                        });
                });

            modelBuilder.Entity("DataLayer.ModelsCodeFirst.TipoProducto", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Tipo")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("TiposDeProductos");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Tipo = "Tipo_1"
                        },
                        new
                        {
                            Id = 2,
                            Tipo = "Tipo_2"
                        },
                        new
                        {
                            Id = 3,
                            Tipo = "Tipo_3"
                        });
                });

            modelBuilder.Entity("DataLayer.ModelsCodeFirst.Asegurado", b =>
                {
                    b.HasOne("DataLayer.ModelsCodeFirst.Poliza", "SuPoliza")
                        .WithMany("lAsegurados")
                        .HasForeignKey("PolizaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("SuPoliza");
                });

            modelBuilder.Entity("DataLayer.ModelsCodeFirst.Poliza", b =>
                {
                    b.HasOne("DataLayer.ModelsCodeFirst.Producto", "SuProducto")
                        .WithMany("lPolizas")
                        .HasForeignKey("ProductoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("SuProducto");
                });

            modelBuilder.Entity("DataLayer.ModelsCodeFirst.Producto", b =>
                {
                    b.HasOne("DataLayer.ModelsCodeFirst.TipoProducto", "Tipo")
                        .WithMany("lProductos")
                        .HasForeignKey("TipoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Tipo");
                });

            modelBuilder.Entity("DataLayer.ModelsCodeFirst.Poliza", b =>
                {
                    b.Navigation("lAsegurados");
                });

            modelBuilder.Entity("DataLayer.ModelsCodeFirst.Producto", b =>
                {
                    b.Navigation("lPolizas");
                });

            modelBuilder.Entity("DataLayer.ModelsCodeFirst.TipoProducto", b =>
                {
                    b.Navigation("lProductos");
                });
#pragma warning restore 612, 618
        }
    }
}
