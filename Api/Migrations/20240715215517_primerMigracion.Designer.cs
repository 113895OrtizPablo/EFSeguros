// <auto-generated />
using System;
using Api.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Api.Migrations
{
    [DbContext(typeof(ContextDB))]
    [Migration("20240715215517_primerMigracion")]
    partial class primerMigracion
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Clases.Models.Asegurado", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("DNI")
                        .HasMaxLength(9)
                        .HasColumnType("int");

                    b.Property<DateTime>("FechaNacimiento")
                        .HasMaxLength(10)
                        .HasColumnType("datetime2");

                    b.Property<int>("IdPoliza")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("PolizaId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PolizaId");

                    b.ToTable("Asegurado");
                });

            modelBuilder.Entity("Clases.Models.Poliza", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Estado")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("IdProducto")
                        .HasColumnType("int");

                    b.Property<int>("SuProductoId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("SuProductoId");

                    b.ToTable("Poliza");
                });

            modelBuilder.Entity("Clases.Models.Producto", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("TipoId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("TipoId");

                    b.ToTable("Producto");
                });

            modelBuilder.Entity("Clases.Models.TipoDeProducto", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Tipo")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("TipoProducto");
                });

            modelBuilder.Entity("Clases.Models.Asegurado", b =>
                {
                    b.HasOne("Clases.Models.Poliza", null)
                        .WithMany("lAsegurados")
                        .HasForeignKey("PolizaId");
                });

            modelBuilder.Entity("Clases.Models.Poliza", b =>
                {
                    b.HasOne("Clases.Models.Producto", "SuProducto")
                        .WithMany()
                        .HasForeignKey("SuProductoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("SuProducto");
                });

            modelBuilder.Entity("Clases.Models.Producto", b =>
                {
                    b.HasOne("Clases.Models.TipoDeProducto", "Tipo")
                        .WithMany()
                        .HasForeignKey("TipoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Tipo");
                });

            modelBuilder.Entity("Clases.Models.Poliza", b =>
                {
                    b.Navigation("lAsegurados");
                });
#pragma warning restore 612, 618
        }
    }
}
